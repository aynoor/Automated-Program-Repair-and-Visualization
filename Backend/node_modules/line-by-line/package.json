{
  "author": {
    "name": "Markus Ostertag",
    "email": "mo@mo-its.de"
  },
  "contributors": [
    {
      "name": "Markus von der Wehd",
      "email": "mvdw@mwin.de"
    }
  ],
  "name": "line-by-line",
  "description": "A NodeJS module that helps you reading large text files, line by line, without buffering the files into memory.",
  "version": "0.1.4",
  "keywords": [
    "line",
    "file",
    "reader",
    "fs"
  ],
  "homepage": "https://github.com/Osterjour/line-by-line",
  "repository": {
    "type": "git",
    "url": "git@github.com:Osterjour/line-by-line.git"
  },
  "main": "line-by-line.js",
  "dependencies": {},
  "devDependencies": {
    "jshint": "2.5.x"
  },
  "scripts": {
    "test": "jshint ."
  },
  "optionalDependencies": {},
  "engines": {
    "node": ">=0.8.0"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://raw.github.com/Osterjour/line-by-line/master/LICENSE.txt"
    }
  ],
  "readme": "[![Build Status](https://travis-ci.org/Osterjour/line-by-line.svg?branch=master)](https://travis-ci.org/Osterjour/line-by-line)\r\n[![npm version](https://badge.fury.io/js/line-by-line.svg)](http://badge.fury.io/js/line-by-line)\r\n\r\n# Line By Line\r\nis a [NodeJS](http://nodejs.org/) module\r\nthat helps you reading large text files, line by line,\r\nwithout buffering the files into memory.\r\n\r\nInstallation:\r\n\r\n    npm install line-by-line\r\n\r\n\r\n## Usage:\r\n\r\nSynchronous processing of lines:\r\n\r\n\tvar LineByLineReader = require('line-by-line'),\r\n\t    lr = new LineByLineReader('big_file.txt');\r\n\r\n\tlr.on('error', function (err) {\r\n\t\t// 'err' contains error object\r\n\t});\r\n\r\n\tlr.on('line', function (line) {\r\n\t\t// 'line' contains the current line without the trailing newline character.\r\n\t});\r\n\r\n\tlr.on('end', function () {\r\n\t\t// All lines are read, file is closed now.\r\n\t});\r\n\r\nAsynchronous processing of lines:\r\n\r\n\tvar LineByLineReader = require('line-by-line'),\r\n\t    lr = new LineByLineReader('big_file.txt');\r\n\r\n\tlr.on('error', function (err) {\r\n\t\t// 'err' contains error object\r\n\t});\r\n\r\n\tlr.on('line', function (line) {\r\n\t\t// pause emitting of lines...\r\n\t\tlr.pause();\r\n\r\n\t\t// ...do your asynchronous line processing..\r\n\t\tsetTimeout(function () {\r\n\r\n\t\t\t// ...and continue emitting lines.\r\n\t\t\tlr.resume();\r\n\t\t}, 100);\r\n\t});\r\n\r\n\tlr.on('end', function () {\r\n\t\t// All lines are read, file is closed now.\r\n\t});\r\n\r\n\r\n## API:\r\n\r\n**Class: LineReader(path [, options])**\r\n\r\n`path` specifies the file to read\r\n\r\n`options` is an object with the following defaults:\r\n```\r\n{ encoding: 'utf8',\r\n  skipEmptyLines: false }\r\n```\r\n\r\n`encoding` can be `'utf8'`, `'ascii'`, or `'base64'`.\r\n\r\nIf `skipEmptyLines` set to `true`, empty lines don't trigger a 'line' event.\r\n\r\nYou can also pass `start` and `end` position to read from file region:\r\n\r\n```\r\n{ encoding: 'utf8',\r\n  skipEmptyLines: true,\r\n  start: 1000 }\r\n```\r\n\r\n\r\n**Event: 'line'**\r\n\r\n    function (line) { }\r\n\r\nEmitted on every line read.\r\n\r\n`line` contains the line without the line ending character.\r\n\r\n\r\n**Event: 'error'**\r\n\r\n    function (error) { }\r\n\r\nEmitted if an error occurred.\r\n\r\n`error` contains the error object.\r\n\r\n\r\n**Event: 'end'**\r\n\r\n    function () { }\r\n\r\nEmitted if all lines are read.\r\n\r\n\r\n**pause()**\r\n\r\nCall this method to stop emitting 'line' events.\r\n\r\n\r\n**resume()**\r\n\r\nAfter calling this method, 'line' events gets emitted again.\r\n\r\n\r\n**close()**\r\n\r\nStops emitting 'line' events, closes the file and emits the 'end' event.\r\n\r\n\r\n## License:\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright Â© 2012 Markus von der Wehd\r\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/Osterjour/line-by-line/issues"
  },
  "_id": "line-by-line@0.1.4",
  "dist": {
    "shasum": "c8965cb86232a5bb46d0891e0bee3fc51eb05ac7"
  },
  "_from": "line-by-line@",
  "_resolved": "https://registry.npmjs.org/line-by-line/-/line-by-line-0.1.4.tgz"
}
